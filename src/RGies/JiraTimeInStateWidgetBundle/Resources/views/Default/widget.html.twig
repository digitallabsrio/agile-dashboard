{% extends "MetricsBundle::Templates/default-widget.html.twig" %}

{% block widget_body %}
    <span id="widget-value-{{ widget.id }}" style="font-size:11px">
        <table>
            <tr><td><i class="fa fa-circle"></i> <a>###-#######</a> &nbsp;&nbsp;&nbsp;&nbsp;<i>################</i></td></tr>
            <tr><td><i class="fa fa-circle"></i> <a>###-#######</a> &nbsp;&nbsp;&nbsp;&nbsp;<i>################</i></td></tr>
            <tr><td><i class="fa fa-circle"></i> <a>###-#######</a> &nbsp;&nbsp;&nbsp;&nbsp;<i>################</i></td></tr>
            <tr><td><i class="fa fa-circle"></i> <a>###-#######</a> &nbsp;&nbsp;&nbsp;&nbsp;<i>################</i></td></tr>
            <tr><td><i class="fa fa-circle"></i> <a>###-#######</a> &nbsp;&nbsp;&nbsp;&nbsp;<i>################</i></td></tr>
        </table>
    </span>

    <div class="widget-footer-line">
        <span id="widget-link-{{ widget.id }}" style="font-size: 12px">
            <a><i class="fa fa-arrow-circle-right"></i> More info</a>
        </span>
    </div>
{% endblock %}

{% block menue_items %}
    <li role="separator" class="divider"></li>
    <li>
        <a href="javascript:reloadData{{ widget.id }}({{ widget.id }});">
            <i class="fa fa-refresh fa-fw"></i> Reload
        </a>
    </li>
{% endblock %}

{% block script %}
    <script>
        // register request to get widget data
        addDataRequest(
            '{{ path('JiraTimeInStateWidgetBundle-collect-data') }}',
            {id:{{ widget.id }}, type:'{{ widget.type }}', size: '{{ widget.size }}', updateInterval:'{{ widget.updateInterval }}'},
            function (data) { displayData{{ widget.id }}(data);}
        );

        /**
         * Relead widget data.
         *
         * @param id
         */
        function reloadData{{ widget.id }}(id)
        {
            // set reload spinner
            $('#widget-title-suffix-{{ widget.id }}').html('<i class="fa fa-refresh fa-spin fa-fw"></i>');

            // reset data cache
            $.post( '{{ path('JiraTimeInStateWidgetBundle-reload-data') }}',
                {id: id},
                function(data) {
                    $.post('{{ path('JiraTimeInStateWidgetBundle-collect-data') }}',
                        {id:{{ widget.id }}, type:'{{ widget.type }}', size: '{{ widget.size }}', updateInterval:'{{ widget.updateInterval }}'},
                        displayData{{ widget.id }}
                    );
                }
            );
        }

        /**
         * Display widget data.
         *
         * @param data
         */
        function displayData{{ widget.id }}(data)
        {
            var response = JSON.parse(data);

            // reset reload spinner
            $('#widget-title-suffix-{{ widget.id }}').html('');

            if (response['warning']) {
                $('#widget-value-{{ widget.id }}').html(
                    '<div class="widget-value-warning"><i class="fa fa-warning"></i> ' +
                    response['warning'] + '</div>'
                );
                return;
            }

            if (response['table']) {
                $('#widget-value-{{ widget.id }}').html(response['table']);
            }

            // More info link
            if (response['link'] != undefined) {
                $('#widget-link-{{ widget.id }}').html(
                    '<a href="' + response['link']
                    + '" target="_blank"><i class="fa fa-arrow-circle-right"></i> More info '
                    + '</a>'
                );
            }
        }
    </script>
{% endblock %}